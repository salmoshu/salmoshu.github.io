import{_ as o,c as e,a6 as l,o as a}from"./chunks/framework.B5S16sG3.js";const h=JSON.parse('{"title":"3 机器人应用（Robot）","description":"","frontmatter":{"sidebarDepth":2},"headers":[],"relativePath":"robot/Nav-Tools/03-robot.md","filePath":"robot/Nav-Tools/03-robot.md"}'),i={name:"robot/Nav-Tools/03-robot.md"};function s(n,t,r,u,d,p){return a(),e("div",null,t[0]||(t[0]=[l(`<h1 id="_3-机器人应用-robot" tabindex="-1">3 机器人应用（Robot） <a class="header-anchor" href="#_3-机器人应用-robot" aria-label="Permalink to &quot;3 机器人应用（Robot）&quot;">​</a></h1><h2 id="_3-1-flow-数据流" tabindex="-1">3.1 Flow 数据流 <a class="header-anchor" href="#_3-1-flow-数据流" aria-label="Permalink to &quot;3.1 Flow 数据流&quot;">​</a></h2><img style="width:100%;margin:0 auto;display:block;" src="https://raw.githubusercontent.com/salmoshu/Winchell-ImgBed/main/img/20251020-153918.jpg"><p style="text-align:center;">图3-1: 机器人Flow数据流</p><p>Flow考虑了机器人常见的可视化需求，例如数据的时序变化、原始日志和轨迹偏移。Flow要求的数据采用JSON格式，并以换行符分隔，每行一个JSON对象，以下为一段示例数据：</p><div class="language-text vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">text</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>{&quot;time&quot;: 0.00, &quot;camera_distance&quot;: 1.20, &quot;camera_angle&quot;: 0.5, &quot;pid_left_speed&quot;: 0.30, &quot;pid_right_speed&quot;: 0.30, &quot;motor_left_speed&quot;: 0.28, &quot;motor_right_speed&quot;: 0.28}</span></span>
<span class="line"><span>{&quot;time&quot;: 0.05, &quot;camera_distance&quot;: 1.18, &quot;camera_angle&quot;: 0.4, &quot;pid_left_speed&quot;: 0.30, &quot;pid_right_speed&quot;: 0.30, &quot;motor_left_speed&quot;: 0.29, &quot;motor_right_speed&quot;: 0.29}</span></span>
<span class="line"><span>{&quot;time&quot;: 0.10, &quot;camera_distance&quot;: 1.15, &quot;camera_angle&quot;: 0.3, &quot;pid_left_speed&quot;: 0.31, &quot;pid_right_speed&quot;: 0.30, &quot;motor_left_speed&quot;: 0.30, &quot;motor_right_speed&quot;: 0.29}</span></span></code></pre></div><h3 id="_3-1-1-日志组件-console" tabindex="-1">3.1.1 日志组件（Console） <a class="header-anchor" href="#_3-1-1-日志组件-console" aria-label="Permalink to &quot;3.1.1 日志组件（Console）&quot;">​</a></h3><br><img style="width:80%;margin:0 auto;display:block;" src="https://raw.githubusercontent.com/salmoshu/Winchell-ImgBed/main/img/20251020-154347.jpg"><p style="text-align:center;">图3-2: 日志组件（Console）</p><ol><li>控制区 <ul><li>数据过滤：用于过滤感兴趣的数据（当前支持JSON、NMEA）</li><li>启用时间/禁用时间：启用或禁用时间戳</li><li>置底/滚动：将窗口吸附在底部或使用鼠标手动滚动窗口；</li><li>搜索：字段搜索</li><li>保存：保存日志</li><li>清除：清空控制台</li><li>继续/暂停：继续或暂停呈现控制数据（仅用于实时数据）</li></ul></li><li>内容区 <ul><li>黑色字体为有效数据，红色字体为其他数据、黄色字体为搜索目标。</li></ul></li><li>状态区 <ul><li>消息总数</li><li>有效数目</li><li>数据接收速率</li></ul></li></ol><h3 id="_3-1-2-时序数据-data" tabindex="-1">3.1.2 时序数据（Data） <a class="header-anchor" href="#_3-1-2-时序数据-data" aria-label="Permalink to &quot;3.1.2 时序数据（Data）&quot;">​</a></h3><br><img style="width:80%;margin:0 auto;display:block;" src="https://raw.githubusercontent.com/salmoshu/Winchell-ImgBed/main/img/20251020-154618.jpg"><p style="text-align:center;">图3-3: 时序数据（Data）</p><ol><li>配置 <ul><li>视图布局（支持单图单Y轴、单图双Y轴、双图单Y轴、双图双Y轴）</li><li>字段选择（Flow会自动从JSON中解析字段）</li><li>取色器与填充（可自定义颜色及是否填充）</li></ul></li><li>启用/关闭滑窗：滑窗会显示最新的100条数据（实时工作时，将强制启用滑窗以保证应用性能）</li><li>消息格式</li><li>刷新：恢复放缩状态</li><li>清除：清空所有数据</li></ol><h3 id="_3-1-3-轨迹数据-deviation" tabindex="-1">3.1.3 轨迹数据（Deviation） <a class="header-anchor" href="#_3-1-3-轨迹数据-deviation" aria-label="Permalink to &quot;3.1.3 轨迹数据（Deviation）&quot;">​</a></h3><br><img style="width:80%;margin:0 auto;display:block;" src="https://raw.githubusercontent.com/salmoshu/Winchell-ImgBed/main/img/20251020-154831.jpg"><p style="text-align:center;">图3-4: 轨迹数据（Deviation）</p><ol><li>配置：配置轨迹字段与颜色，当前最多支持4条轨迹</li><li>启用/关闭滑窗：滑窗会显示最新的100条数据（实时工作时，将强制启用滑窗以保证应用性能）</li><li>启用/关闭跟踪：启用跟踪将保持最新点始终在（0,0）点</li><li>尺寸：调节轨迹尺寸</li><li>刷新：恢复放缩状态</li></ol>`,21)]))}const m=o(i,[["render",s]]);export{h as __pageData,m as default};
