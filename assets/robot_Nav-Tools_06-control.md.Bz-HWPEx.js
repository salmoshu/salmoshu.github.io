import{_ as t,c as o,a6 as e,o as i}from"./chunks/framework.B5S16sG3.js";const p=JSON.parse('{"title":"6 规控模块（PNC）","description":"","frontmatter":{"sidebarDepth":2},"headers":[],"relativePath":"robot/Nav-Tools/06-control.md","filePath":"robot/Nav-Tools/06-control.md"}'),l={name:"robot/Nav-Tools/06-control.md"};function r(n,a,s,h,c,m){return i(),o("div",null,a[0]||(a[0]=[e('<h1 id="_6-规控模块-pnc" tabindex="-1">6 规控模块（PNC） <a class="header-anchor" href="#_6-规控模块-pnc" aria-label="Permalink to &quot;6 规控模块（PNC）&quot;">​</a></h1><h2 id="_6-1-motor" tabindex="-1">6.1 Motor <a class="header-anchor" href="#_6-1-motor" aria-label="Permalink to &quot;6.1 Motor&quot;">​</a></h2><img style="width:100%;margin:0 auto;display:block;" src="https://raw.githubusercontent.com/salmoshu/Winchell-ImgBed/main/img/20251022-171317.jpg"><p style="text-align:center;">图6-1: 电机驱动模块（Motor）</p><h3 id="_6-1-1-配置组件-config" tabindex="-1">6.1.1 配置组件（Config） <a class="header-anchor" href="#_6-1-1-配置组件-config" aria-label="Permalink to &quot;6.1.1 配置组件（Config）&quot;">​</a></h3><br><img style="width:80%;margin:0 auto;display:block;" src="https://raw.githubusercontent.com/salmoshu/Winchell-ImgBed/main/img/20251022-171637.jpg"><p style="text-align:center;">图6-2: 电机驱动指令配置</p><p>Motor模块提供了灵活的指令配置项，包括报头和命令主体，并以读命令和写命令对命令进行了划分。</p><img style="width:80%;margin:0 auto;display:block;" src="https://raw.githubusercontent.com/salmoshu/Winchell-ImgBed/main/img/20251022-171915.jpg"><p style="text-align:center;">图6-3: 命令渲染界面</p><p>界面主体将会根据配置项中的命令来生成相应的按钮，用于实现与下位的电机驱动器进行交互。</p><h3 id="_6-1-2-日志组件-console" tabindex="-1">6.1.2 日志组件（Console） <a class="header-anchor" href="#_6-1-2-日志组件-console" aria-label="Permalink to &quot;6.1.2 日志组件（Console）&quot;">​</a></h3><p>同FlowConsole，不过这里增加了16进制字节数组到JSON的转换。</p><h3 id="_6-1-3-时序数据-data" tabindex="-1">6.1.3 时序数据（Data） <a class="header-anchor" href="#_6-1-3-时序数据-data" aria-label="Permalink to &quot;6.1.3 时序数据（Data）&quot;">​</a></h3><p>同FlowData。</p><h2 id="_6-2-followsim" tabindex="-1">6.2 FollowSim <a class="header-anchor" href="#_6-2-followsim" aria-label="Permalink to &quot;6.2 FollowSim&quot;">​</a></h2><img style="width:100%;margin:0 auto;display:block;" src="https://raw.githubusercontent.com/salmoshu/Winchell-ImgBed/main/img/20251020-160456.jpg"><p style="text-align:center;">图6-4: PID跟随仿真（FollowSim）</p><h3 id="_6-2-1-仪表盘组件-dashboard" tabindex="-1">6.2.1 仪表盘组件（Dashboard） <a class="header-anchor" href="#_6-2-1-仪表盘组件-dashboard" aria-label="Permalink to &quot;6.2.1 仪表盘组件（Dashboard）&quot;">​</a></h3><br><img style="width:80%;margin:0 auto;display:block;" src="https://raw.githubusercontent.com/salmoshu/Winchell-ImgBed/main/img/20251020-160650.jpg"><p style="text-align:center;">图6-5: 仪表盘组件（Dashboard）</p><p>呈现PID跟随的二维动画。</p><h3 id="_6-2-2-时序数据-data" tabindex="-1">6.2.2 时序数据（Data） <a class="header-anchor" href="#_6-2-2-时序数据-data" aria-label="Permalink to &quot;6.2.2 时序数据（Data）&quot;">​</a></h3><br><img style="width:80%;margin:0 auto;display:block;" src="https://raw.githubusercontent.com/salmoshu/Winchell-ImgBed/main/img/20251020-160747.jpg"><p style="text-align:center;">图6-6: 时序数据（Data）</p><p>主要绘制线速度和角速度的变化。</p><h3 id="_6-2-3-控制面板-config" tabindex="-1">6.2.3 控制面板（Config） <a class="header-anchor" href="#_6-2-3-控制面板-config" aria-label="Permalink to &quot;6.2.3 控制面板（Config）&quot;">​</a></h3><br><img style="width:80%;margin:0 auto;display:block;" src="https://raw.githubusercontent.com/salmoshu/Winchell-ImgBed/main/img/20251020-160903.jpg"><p style="text-align:center;">图6-7: 控制面板（Config）</p><p>主要用于调整PID参数和其他相关参数。</p>',34)]))}const g=t(l,[["render",r]]);export{p as __pageData,g as default};
