import{_ as s,c as o,a6 as d,G as a,B as i,o as e}from"./chunks/framework.B5S16sG3.js";const S=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"algorithm/RTKLIB-Source-Notes/01-overview-1.1.md","filePath":"algorithm/RTKLIB-Source-Notes/01-overview-1.1.md"}'),l={name:"algorithm/RTKLIB-Source-Notes/01-overview-1.1.md"};function n(u,t,p,g,h,c){const r=i("GiscusTalk");return e(),o("div",null,[t[0]||(t[0]=d('<h2 id="_1-1-简介" tabindex="-1">1.1 简介 <a class="header-anchor" href="#_1-1-简介" aria-label="Permalink to &quot;1.1 简介&quot;">​</a></h2><p>RTKLIB是一个用于全球导航卫星系统（GNSS）标准定位和精密定位的开源项目，由日本东京海洋大学的高须知二（Tomoji Takasu）开发。它由一个核心程序库和多个命令行程序与界面程序组成。</p><h3 id="_1-1-1-rtklib组成" tabindex="-1">1.1.1 RTKLIB组成 <a class="header-anchor" href="#_1-1-1-rtklib组成" aria-label="Permalink to &quot;1.1.1 RTKLIB组成&quot;">​</a></h3><p>RTKLIB 界面程序包括以下内容，可以直接使用编译好的程序，也可以用作者提供的 Qt 和 C++ builder 两套界面程序的源码自己编译。</p><img style="width:100%;margin:0 auto;display:block;" src="https://raw.githubusercontent.com/salmoshu/Winchell-ImgBed/main/img/20250707-184507.jpg"><p style="text-align:center;font-family:&#39;Microsoft YaHei&#39;, SimSun, Arial, sans-serif;font-size:14px;">图1.1-1 RTKLAUNCH 主界面与应用程序图标</p><ul><li><strong>rtklaunch</strong>：界面程序启动器，界面如上，用来启动 RTKLIB 的主要 GUI 应用程序；</li><li><strong>rtkget</strong>：下载 GNSS 数据，包括 OBS、EPH、ATX、CLK、DCB 等多种文件，可同时下载起止时间内多个机构、多个测站的数据，不过下载速度可能较慢；</li><li><strong>rtkcov</strong>：GNSS 数据格式转换，把采集的接收机原始数据转成 RINEX；</li><li><strong>rtkplot</strong>：原始数据绘图与解算结果绘图，可以用来进行原始数据质量分析、结果精度分析、结果轨迹绘图；</li><li><strong>rtkpost</strong>：后处理定位解算，传入原始观测文件、星历文件和其它改正信息文件，设置好解算选项进行后处理操作；</li><li><strong>rtknavi</strong>：实时定位解算，接通导航数据流，实时定位解算绘图；</li><li><strong>strsvr</strong>：数据流的连接、转换与播发；</li><li><strong>srctblbrows</strong>：NTRIP 资源列表浏览器。</li></ul><p>命令行程序的功能和界面程序功能基本对应。界面程序便于使用，命令行程序代码则便于学习与二次开发；可以通过界面程序学软件的用法，理解程序运行逻辑。然后再通过阅读命令行程序的源码，来更深入地理解。命令行程序还有一个优点就是便于通过脚本进行批处理。</p><ul><li><strong>rnx2rtkp</strong>：后处理定位解算，功能类似 rtkpos。</li><li><strong>rtkrcv</strong>：实时定位解算，功能类似 rtknavi。</li><li><strong>str2str</strong>：数据流的连接、转换与播发，功能类似 strsvr。</li><li><strong>convbin</strong>：数据格式转换，功能类似 rtkcov。</li><li><strong>pos2kml</strong>：定位结果转谷歌地图数据格式。</li></ul><h3 id="_1-1-2-支持的星座" tabindex="-1">1.1.2 支持的星座 <a class="header-anchor" href="#_1-1-2-支持的星座" aria-label="Permalink to &quot;1.1.2 支持的星座&quot;">​</a></h3><p>RTKLIB支持GPS<sup>[1][2][3]</sup>、GLONASS<sup>[4]</sup>、Galileo<sup>[5]</sup>、QZSS<sup>[6]</sup>、北斗<sup>[7]</sup>和SBAS<sup>[8]</sup>等卫星导航系统。</p><h3 id="_1-1-3-定位模式" tabindex="-1">1.1.3 定位模式 <a class="header-anchor" href="#_1-1-3-定位模式" aria-label="Permalink to &quot;1.1.3 定位模式&quot;">​</a></h3><p>RTKLIB支持多种GNSS实时和后处理定位模式：</p><table tabindex="0"><thead><tr><th>定位类别</th><th>模式类型</th><th>特点</th></tr></thead><tbody><tr><td><strong>伪距定位</strong></td><td>Single - 伪距单点定位</td><td>单接收机定位，精度较低。</td></tr><tr><td></td><td>DGPS/DGNSS - 伪距差分</td><td>参考站修正伪距，提高精度。</td></tr><tr><td><strong>载波相位定位</strong></td><td>Kinematic - 载波动态相对定位（动态RTK）</td><td>流动站动态定位，适合车载，需实时解模糊度。</td></tr><tr><td></td><td>Static - 载波静态相对定位（静态RTK）</td><td>两站静止，高精度静态测量。</td></tr><tr><td></td><td>Static-Start - 静态固定后切换为动态（demo5自定义）</td><td>先在静态状态下固定模糊度，而后动态定位，缩短首次固定时间。</td></tr><tr><td></td><td>Moving-Baseline - 双站均移动（双天线模式）</td><td>双站移动，解算相对位置和姿态，适合定姿。</td></tr><tr><td></td><td>Fixed - 固定坐标定位</td><td>已知坐标，解算模糊度、对流层等参数，非定位用途。</td></tr><tr><td><strong>精密单点定位（PPP）</strong></td><td>PPP-Kinematic - 动态精密单点定位</td><td>单站动态定位，使用精密轨道和钟差，适合移动场景。</td></tr><tr><td></td><td>PPP-Static - 静态精密单点定位</td><td>单站静态定位，使用精密轨道和钟差，高精度静止测量。</td></tr><tr><td></td><td>PPP-Fixed - 固定坐标精密定位</td><td>已知坐标，解算模糊度、对流层等参数，非定位用途。</td></tr></tbody></table><h3 id="_1-1-4-应用方向" tabindex="-1">1.1.4 应用方向 <a class="header-anchor" href="#_1-1-4-应用方向" aria-label="Permalink to &quot;1.1.4 应用方向&quot;">​</a></h3><p>RTKLIB 可以初步实现以下功能，与商业软件相比，可靠性没那么高，但对于部分科研已经能够满足：</p><table tabindex="0"><thead><tr><th>功能</th><th>说明</th></tr></thead><tbody><tr><td><strong>静态短基线解算</strong></td><td>相对定位，例如将一个测站安装在比较稳定的地区，而将另一测站安装在目标区域进行变形监测。</td></tr><tr><td><strong>动态后处理差分 PPK</strong></td><td>例如无人机遥感、倾斜摄影测量等，需要高精度的位置和姿态解算精度。</td></tr><tr><td><strong>实时动态差分 RTK</strong></td><td>例如车载导航定位和室外机器人定位等。</td></tr><tr><td><strong>精密单点定位 PPP</strong></td><td>可以用来解算基准站坐标，可以进行精密定轨、电离层对流层建模、时间传递。</td></tr><tr><td><strong>实时精密单点定位 RT-PPP</strong></td><td>例如接收实时的精密卫星改正数，通过接收机数据进行实时单点定位。用途比较广泛，例如在海洋上，海啸的监测预警、海平面变化的监测、船只定位、海上石油平台作业等。</td></tr></tbody></table><h3 id="_1-1-5-支持的格式与标准" tabindex="-1">1.1.5 支持的格式与标准 <a class="header-anchor" href="#_1-1-5-支持的格式与标准" aria-label="Permalink to &quot;1.1.5 支持的格式与标准&quot;">​</a></h3><p>RTKLIB支持多种GNSS标准格式和协议（详细信息参考附录D.1和D.2）：</p><ul><li><strong>RINEX：</strong> RINEX 2.10 <sup>[9]</sup>, 2.11 <sup>[10]</sup>, 2.12 <sup>[11]</sup> OBS/NAV/GNAV/HNAV/LNAV/QNAV, RINEX 3.00 <sup>[12]</sup>, 3.01 <sup>[13]</sup>, 3.02 <sup>[14]</sup> OBS/NAV, <u>RINEX 3.02 CLK</u> <sup>[15]</sup></li><li><strong>RTCM：</strong> RTCM ver.2.3 <sup>[16]</sup>, RTCM ver.3.1（修订1-5）<sup>[17]</sup>,<u>RTCM ver.3.2</u> <sup>[18]</sup>；</li><li><strong>其他标准：</strong> BINEX <sup>[19]</sup>, NTRIP 1.0 <sup>[20]</sup>, <u>NMEA 0183</u> <sup>[21]</sup>, SP3-c <sup>[22]</sup>, ANTEX 1.4 <sup>[23]</sup>, IONEX 1.0 <sup>[24]</sup>， NGS PCV<sup>[25]</sup>和EMS 2.0<sup>[26]</sup></li></ul><h3 id="_1-1-6-支持的私有格式" tabindex="-1">1.1.6 支持的私有格式 <a class="header-anchor" href="#_1-1-6-支持的私有格式" aria-label="Permalink to &quot;1.1.6 支持的私有格式&quot;">​</a></h3><p>RTKLIB支持以下几种GNSS接收机的专有消息格式（详细信息参考附录D.2）：</p><table tabindex="0"><thead><tr><th><strong>品牌</strong></th><th><strong>支持型号</strong></th></tr></thead><tbody><tr><td>NovAtel <sup>[27]</sup></td><td>OEM4/V/6, OEM3, OEMStar, Superstar II</td></tr><tr><td>Hemisphere <sup>[28]</sup></td><td>Eclipse, Crescent</td></tr><tr><td>u-blox <sup>[29]</sup></td><td>LEA-4T/5T/6T</td></tr><tr><td>SkyTraq <sup>[30]</sup></td><td>S1315F</td></tr><tr><td>JAVAD <sup>[31]</sup></td><td>GRIL/GREIS</td></tr><tr><td>Furuno <sup>[32]</sup></td><td>GW-10-II/III</td></tr><tr><td>NVS <sup>[33]</sup></td><td>NV08C BINR</td></tr></tbody></table><p>注意：上述表格仅列出了原始官方RTKLIB支持的部分品牌和型号，具体支持情况会因版本差异而有所不同，例如最新的demo5代码已经开始支持和芯星通Unicore的专有格式。</p><h3 id="_1-1-7-支持的通信方式" tabindex="-1">1.1.7 支持的通信方式 <a class="header-anchor" href="#_1-1-7-支持的通信方式" aria-label="Permalink to &quot;1.1.7 支持的通信方式&quot;">​</a></h3><p>支持多种通信方式，用于接收机数据传输、差分定位、实时PPP以及数据记录和调试：</p><ul><li><strong>串口：</strong> 接收机通过串口直接连接电脑，传输观测数据和星历数据。</li><li><strong>TCP/IP：</strong> 通过网络接口实现数据传输。</li><li><strong>NTRIP：</strong> 用于获取差分定位的基准站数据和实时PPP的SSR（状态空间表示）数据。</li><li><strong>本地日志文件：</strong><ul><li>支持记录原始数据流到日志文件。</li><li>支持日志文件回放，用于模拟实时数据流进行调试。</li><li>可将日志文件转换为RINEX格式，从而进行后处理操作。</li></ul></li><li><strong>FTP/HTTP：</strong> 支持自动下载数据。</li></ul><h3 id="_1-1-8-核心库函数" tabindex="-1">1.1.8 核心库函数 <a class="header-anchor" href="#_1-1-8-核心库函数" aria-label="Permalink to &quot;1.1.8 核心库函数&quot;">​</a></h3><p>RTKLIB提供了许多库函数和API（应用程序接口）：</p><ul><li><strong>基础工具：</strong> 卫星和导航系统函数、矩阵运算函数、时间与字符串函数、坐标转换、平台相关函数、选项配置</li><li><strong>数学模型：</strong> 标准定位、精密定位、整周模糊度固定、星历与时钟函数、大气模型、天线模型、潮汐模型、大地水准面模型、大地基准转换、SBAS</li><li><strong>数据处理：</strong> 输入和输出函数、接收机原始数据处理、解函数（定位结果处理）、KML转换器</li><li><strong>协议支持：</strong> RINEX、RTCM、NMEA</li><li><strong>数据传输：</strong> 数据流服务器、数据下载</li><li><strong>程序调试：</strong> 调试与跟踪</li></ul>',30)),a(r)])}const b=s(l,[["render",n]]);export{S as __pageData,b as default};
