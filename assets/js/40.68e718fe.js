(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{456:function(t,s,a){"use strict";a.r(s);var n=a(34),r=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"三-issues"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#三-issues"}},[t._v("#")]),t._v(" 三. Issues")]),t._v(" "),a("p",[t._v("说明文字。")]),t._v(" "),a("ol",[a("li",[t._v("[关于float类型和int类型相乘的问题](#1. 关于float类型和int类型相乘的问题)")]),t._v(" "),a("li",[t._v("[对存储类的理解](#2. 对存储类的理解)")]),t._v(" "),a("li",[t._v("[占位符%d、%3d、%-3d的区别](#3. 占位符%d、%3d、%-3d的区别)")]),t._v(" "),a("li",[t._v("[计算机中的位，字节，字，字长的概念](#4. 计算机中的位，字节，字，字长的概念)")]),t._v(" "),a("li",[t._v("[全局变量和静态变量](#5. 全局变量和静态变量)")]),t._v(" "),a("li",[t._v("[共用体的使用](#6. 共用体的使用)")])]),t._v(" "),a("h4",{attrs:{id:"_1-关于float类型和int类型相乘的问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1-关于float类型和int类型相乘的问题"}},[t._v("#")]),t._v(" 1. 关于float类型和int类型相乘的问题")]),t._v(" "),a("p",[t._v("问题描述：float类型与int类型数据相乘，会存在精度丢失的情况。")]),t._v(" "),a("p",[t._v("问题分析：规定输出结果为float类型，使用系统平台为win10")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.11")]),t._v(" * "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("111.000000")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.111")]),t._v(" * "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("111.099998")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1111")]),t._v(" * "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("111.110001")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.11111")]),t._v(" * "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("111.111000")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.111111")]),t._v(" * "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("111.111099")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1111111")]),t._v(" * "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("111.111107")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.11111111")]),t._v(" * "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("111.111115")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("..")]),t._v(".\n"),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1.1111111111111")]),t._v(" * "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("100")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("111.111115")]),t._v("\n")])])]),a("p",[t._v("原因：")]),t._v(" "),a("p",[t._v("1.111转化为二进制以后是1.000111000110101...，这个数字无法用二进制完全表示，这才导致了上述现象。")]),t._v(" "),a("p",[t._v("二进制转换网页：https://tool.oschina.net/hexconvert/")]),t._v(" "),a("p",[t._v("另外：")]),t._v(" "),a("p",[t._v("在一则博客中，在arm-linux环境下，float与int类型数据相乘，int类型首先会转化为float类型再乘，其要点在于如果一个运算符两边的运算数类型不同，先要将其转换为相同的类型，即较低类型转换为较高类型，然后再参加运算。")]),t._v(" "),a("p",[t._v("同时发现的小知识：")]),t._v(" "),a("p",[t._v("输出的时候用“%f”或者“%lf”表示double都是可以的，但是输入的时候double只能用“%lf”表示。")]),t._v(" "),a("h4",{attrs:{id:"_2-对存储类的理解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2-对存储类的理解"}},[t._v("#")]),t._v(" 2. 对存储类的理解")]),t._v(" "),a("p",[t._v("存储类定义C程序中变量/函数的范围（可见性）和生命周期，这些说明符放置在它们所修饰的类型之前。")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("存储类")]),t._v(" "),a("th",[t._v("说明")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("auto")]),t._v(" "),a("td",[t._v("auto是所有局部变量默认的存储类。")])]),t._v(" "),a("tr",[a("td",[t._v("register")]),t._v(" "),a("td",[t._v("register存储类用于定义存储在寄存器中而不是 RAM 中的局部变量，其最大尺寸等于寄存器的大小（通常是一个字）。")])]),t._v(" "),a("tr",[a("td",[t._v("static")]),t._v(" "),a("td",[t._v("static存储类指示编译器在程序的生命周期内保持局部变量的存在，而不需要在每次它进入和离开作用域时进行创建和销毁。因此，使用 static 修饰局部变量可以在函数调用之间保持局部变量的值。（多次调用该局部变量，不会每次重新定义，而是用的旧值）")])]),t._v(" "),a("tr",[a("td",[t._v("extern")]),t._v(" "),a("td",[t._v("extern 存储类用于提供一个全局变量的引用，全局变量对所有的程序文件都是可见的。当您使用 extern时，对于无法初始化的变量，会把变量名指向一个之前定义过的存储位置。用于当有两个或多个文件共享相同的全局变量或函数的时候。")])])])]),t._v(" "),a("h4",{attrs:{id:"_3-占位符-d、-3d、-3d的区别"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3-占位符-d、-3d、-3d的区别"}},[t._v("#")]),t._v(" 3. 占位符%d、%3d、%-3d的区别")]),t._v(" "),a("div",{staticClass:"language-c extra-class"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("/*\n一般为了让输出内容对其，可以用这个知识\n*/")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%d\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出: 0")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%3d\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出: _ _ 0 (其中_表示空格)")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%-3d\\n"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 输出: 0 _ _")]),t._v("\n")])])]),a("h4",{attrs:{id:"_4-计算机中的位-字节-字-字长的概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4-计算机中的位-字节-字-字长的概念"}},[t._v("#")]),t._v(" 4. 计算机中的位，字节，字，字长的概念")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("存储名称")]),t._v(" "),a("th",[t._v("概念")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("位")]),t._v(" "),a("td",[t._v("位表示的是二进制位，一般称为比特，是计算机存储的最小单位。")])]),t._v(" "),a("tr",[a("td",[t._v("字节")]),t._v(" "),a("td",[t._v("字节是计算机中数据处理的基本单位。计算机中以字节为单位存储和解释信息，规定一个字节由八个二进制位构成，即1个字节等于8个比特（1Byte=8bit）")])]),t._v(" "),a("tr",[a("td",[t._v("字")]),t._v(" "),a("td",[t._v("计算机进行数据处理时，一次存取、加工和传送的数据长度称为字（word）。一个字通常由一个或多个字节构成。")])]),t._v(" "),a("tr",[a("td",[t._v("字长")]),t._v(" "),a("td",[t._v("计算机的每个字所包含的位数称为字长，其长度由计算机平台决定。")])])])]),t._v(" "),a("h4",{attrs:{id:"_5-全局变量和静态变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-全局变量和静态变量"}},[t._v("#")]),t._v(" 5. 全局变量和静态变量")]),t._v(" "),a("p",[t._v("1）全局变量和静态变量存储区分为DATA段和BSS段，其中DATA段（全局初始化区）存放初始化的全局变量和静态变量，BSS段（全局位初始化区）存放未初始化的全局变量和静态变量；")]),t._v(" "),a("p",[t._v("2）空间分配的地方在应用程序的 main() 函数前的全局数据声明和定义处；")]),t._v(" "),a("p",[t._v("3）在修饰变量的时候，static 修饰的静态局部变量只执行初始化一次，而且延长了局部变量的生命周期，直到程序运行结束以后才释放。")]),t._v(" "),a("p",[t._v("4）static 修饰全局变量的时候，这个全局变量只能在本文件中访问，不能在其它文件中访问，即便是 extern 外部声明也不可以。")]),t._v(" "),a("p",[t._v("5）static 修饰一个函数，则这个函数的只能在本文件中调用，不能被其他文件调用。static 修饰的变量存放在全局数据区的静态变量区，包括全局静态变量和局部静态变量，都在全局数据区分配内存。初始化的时候自动初始化为 0。")]),t._v(" "),a("p",[t._v("6）不想被释放的时候，可以使用static修饰。比如修饰函数中存放在栈空间的数组。如果不想让这个数组在函数调用结束释放可以使用 static 修饰。")]),t._v(" "),a("p",[t._v("7）考虑到数据安全性（当程序想要使用全局变量的时候应该先考虑使用 static）。")]),t._v(" "),a("p",[t._v("综上：存储分区；存储位置；只初始化一次；本文件访问变量；本文件访问函数；生命周期；安全性")]),t._v(" "),a("h4",{attrs:{id:"_6-共用体的使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-共用体的使用"}},[t._v("#")]),t._v(" 6. 共用体的使用")]),t._v(" "),a("p",[t._v("共用体最大的特点就是成员变量共用一块内存，也因此一回只能操作一个变量，如果修改一个成员变量，另一个成员变量的值会导致污染。不过基于这个特点，可以做一些有趣的应用，比如两个变量，一个用来定义结构，一个用来做访问，方便阅读；也可以用来做类型转换。")]),t._v(" "),a("p",[t._v("可以参考：https://blog.csdn.net/alex_xhl/article/details/8189004")])])}),[],!1,null,null,null);s.default=r.exports}}]);