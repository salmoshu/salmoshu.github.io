import{_ as t,c as o,a0 as r,o as a}from"./chunks/framework.CMtr6uOw.js";const d=JSON.parse('{"title":"MobileGNSS-SPP","description":"","frontmatter":{"sidebarDepth":2},"headers":[],"relativePath":"algorithm/MobileGNSS-SPP/index.md","filePath":"algorithm/MobileGNSS-SPP/index.md"}'),i={name:"algorithm/MobileGNSS-SPP/index.md"};function s(l,e,n,S,h,m){return a(),o("div",null,e[0]||(e[0]=[r('<h1 id="mobilegnss-spp" tabindex="-1">MobileGNSS-SPP <a class="header-anchor" href="#mobilegnss-spp" aria-label="Permalink to &quot;MobileGNSS-SPP&quot;">​</a></h1><h2 id="an-ekf-based-spp-system-optimized-for-smartphone" tabindex="-1">An EKF-based SPP system optimized for smartphone <a class="header-anchor" href="#an-ekf-based-spp-system-optimized-for-smartphone" aria-label="Permalink to &quot;An EKF-based SPP system optimized for smartphone&quot;">​</a></h2><p><img src="https://raw.githubusercontent.com/salmoshu/Winchell-ImgBed/main/img/MobileGNSS-SPP%20Framework-20250616-150022.png" alt="MobileGNSS-SPP框架"></p><p><a href="https://github.com/salmoshu/MobileGNSS-SPP" target="_blank" rel="noreferrer">MobileGNSS-SPP</a> 是一个基于 <a href="https://www.rtklib.com/" target="_blank" rel="noreferrer">RTKLIB</a> 的开源单点定位（SPP）项目，专门针对智能手机 GNSS 芯片进行了优化。虽然项目最初为特定 GNSS 芯片设计，但其优化思路具有通用性和启发性，可广泛应用于其他 GNSS 硬件。该项目不以算法或框架的先进性为核心，而是聚焦于工程化实现以及算法在多样化场景下的鲁棒性，因此可作为从开源代码到工程化方案的参考路线图。</p><h2 id="核心特性" tabindex="-1">核心特性 <a class="header-anchor" href="#核心特性" aria-label="Permalink to &quot;核心特性&quot;">​</a></h2><ul><li><strong>智能手机优化 GNSS 处理</strong>：针对低质量数据的移动设备，优化算法以提升定位精度。</li><li><strong>多样场景鲁棒性</strong>：在开阔高速公路到复杂城市峡谷等多种环境中经过广泛测试。</li><li><strong>全面测试框架</strong>：提供 Python 工具集，用于批量处理、精度评估和深入数据分析。</li></ul><h2 id="算法优化" tabindex="-1">算法优化 <a class="header-anchor" href="#算法优化" aria-label="Permalink to &quot;算法优化&quot;">​</a></h2><p>项目对 RTKLIB 核心代码（主要在 <code>rtklib_src/pntpos.c</code> 文件）进行了多项改进，以提升定位精度和鲁棒性：</p><ul><li><strong>M估计（抗差估计）</strong>：采用迭代最小二乘法构建权阵 W，使用 Huber 核函数，并对大残差项进行截断处理以提高稳定性。</li><li><strong>零速修正</strong>：优化静态或低速场景下的定位精度，适用于智能手机典型用例。</li><li><strong>SNR加权模型</strong>：对伪距和多普勒测量值均应用信噪比（SNR）加权，提升信号质量评估。</li><li><strong>多路径误差补偿</strong>：基于芯片测试经验，补偿伪距残差中的多路径效应，增强复杂环境下的性能。</li><li><strong>自适应 Q 矩阵</strong>：通过扩展卡尔曼滤波（EKF）预测速度与鲁棒加权最小二乘（RWLS）速度差值，动态调整 EKF 中速度协方差。</li><li><strong>基于二次规划的代价最小化</strong>：采用二次规划优化方法，减少定位误差（该部分使用Python实现，仅针对后处理）。</li></ul>',9)]))}const P=t(i,[["render",s]]);export{d as __pageData,P as default};
